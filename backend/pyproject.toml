[project]
name = "rag-starter-kit-backend"
version = "0.1.0"
description = "Enterprise RAG Platform Backend - FastAPI application with vector search capabilities"
requires-python = ">=3.11"
dependencies = [
    # FastAPI and server
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "python-multipart==0.0.6",
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",

    # Database
    "sqlalchemy==2.0.23",
    "alembic==1.12.1",
    "psycopg",
    "redis[hiredis]==5.0.1",
    "numpy==1.25.2",

    # Pydantic and validation
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",

    # Document processing
    "PyPDF2==3.0.1",
    "pdfplumber==0.10.3",
    "python-docx==1.1.0",
    "markdown>=3.4.0,<4.0.0",
    "beautifulsoup4==4.12.2",
    "pypandoc==1.12",

    # Vector databases
    "pinecone-client==2.2.4",
    "weaviate-client==3.25.3",
    "chromadb==0.4.18",

    # Search and embeddings
    "langchain==0.0.335",
    "langchain-openai==0.0.2",
    "openai>=1.6.1,<2.0.0",
    "sentence-transformers==2.2.2",
    "elasticsearch==8.11.0",
    "faiss-cpu==1.7.4",
    "rank-bm25==0.2.2",

    # Text processing
    "nltk==3.8.1",
    "spacy==3.7.2",
    "tiktoken==0.5.2",

    # Async and background tasks
    "celery==5.3.4",
    "aiofiles==23.2.1",
    "httpx==0.25.2",

    # Monitoring and observability
    "prometheus-client==0.19.0",
    "opentelemetry-api==1.21.0",
    "opentelemetry-sdk==1.21.0",
    "opentelemetry-instrumentation-fastapi==0.42b0",
    "structlog==23.2.0",

    # Rate limiting and caching
    "slowapi==0.1.9",
    "aiocache==0.12.2",

    # Utilities
    "python-dotenv==1.0.0",
    "click==8.1.7",
    "rich==13.7.0",
    "typer==0.9.0",
    "psutil==5.9.6",

    # Production server
    "gunicorn==21.2.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "httpx==0.25.2",

    # Development tools
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    # Testing
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "httpx==0.25.2",

    # Development tools
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["--strict-markers", "--strict-config", "--verbose"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "external: Tests requiring external services",
]
asyncio_mode = "auto"
